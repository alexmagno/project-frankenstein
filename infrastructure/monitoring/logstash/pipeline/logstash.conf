input {
  beats {
    port => 5044
  }
  
  tcp {
    port => 5000
    codec => json_lines
  }
  
  # For Spring Boot applications using Logstash encoder
  tcp {
    port => 5045
    codec => json_lines
    tags => ["spring-boot"]
  }
}

filter {
  if "spring-boot" in [tags] {
    # Parse Spring Boot JSON logs
    json {
      source => "message"
    }
    
    # Extract service name from logger or add it manually
    if [logger_name] {
      grok {
        match => { "logger_name" => "com\.frankenstein\.(?<service_name>[^\.]+)" }
      }
    }
    
    # Add service name based on port if not extracted
    if ![service_name] {
      if [port] == 8081 {
        mutate { add_field => { "service_name" => "user-service" } }
      } else if [port] == 8082 {
        mutate { add_field => { "service_name" => "product-service" } }
      } else if [port] == 8083 {
        mutate { add_field => { "service_name" => "order-service" } }
      } else if [port] == 8888 {
        mutate { add_field => { "service_name" => "config-server" } }
      }
    }
    
    # Parse timestamp
    if [timestamp] {
      date {
        match => [ "timestamp", "yyyy-MM-dd HH:mm:ss.SSS" ]
      }
    }
    
    # Add environment
    mutate {
      add_field => { "environment" => "development" }
    }
  }
  
  # General filters for all logs
  mutate {
    add_field => { "project" => "frankenstein" }
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "frankenstein-logs-%{+YYYY.MM.dd}"
  }
  
  # For debugging - remove in production
  stdout {
    codec => rubydebug
  }
}
