server:
  port: 8081

spring:
  application:
    name: user-service
  
  # Shared PostgreSQL Database Configuration
  datasource:
    url: jdbc:postgresql://localhost:5432/frankenstein_shared
    username: user_service_user
    password: userservice123
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 20000
      idle-timeout: 300000
      max-lifetime: 1200000
  
  # JPA Configuration with Schema Specification
  jpa:
    hibernate:
      ddl-auto: validate  # Use Flyway for schema management
    properties:
      hibernate:
        default_schema: user_domain  # Default schema for this service
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        show_sql: false  # Set to true for debugging
    show-sql: false
  
  # Flyway Configuration for Shared Database
  flyway:
    enabled: true
    locations: classpath:db/migration
    schemas: user_domain,shared_domain  # Schemas this service manages
    baseline-on-migrate: true
    validate-on-migrate: true
    
  # MongoDB Configuration for User Preferences
  data:
    mongodb:
      uri: mongodb://frankenstein:frankenstein123@localhost:27017/frankenstein
      database: frankenstein
      
  # Redis Configuration
  redis:
    host: localhost
    port: 6379
    timeout: 2000ms
    jedis:
      pool:
        max-active: 10
        max-idle: 5
        min-idle: 1
  
  # Cache Configuration
  cache:
    type: redis
    redis:
      time-to-live: 600000  # 10 minutes
      
  # Security Configuration
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${JWT_ISSUER_URI:http://localhost:8080/auth/realms/frankenstein}
          
  # Kafka Configuration
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: user-service-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      
  # RabbitMQ Configuration
  rabbitmq:
    host: localhost
    port: 5672
    username: frankenstein
    password: frankenstein123
    virtual-host: /

# Eureka Client Configuration
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    fetch-registry: true
    register-with-eureka: true
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90

# Management and Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,flyway
  endpoint:
    health:
      show-details: when-authorized
    metrics:
      enabled: true
    prometheus:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5, 0.9, 0.95, 0.99
        
# Logging Configuration
logging:
  level:
    com.frankenstein.user: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{traceId:-},%X{spanId:-}] %logger{36} - %msg%n"

# Resilience4j Configuration
resilience4j:
  circuitbreaker:
    instances:
      user-service:
        register-health-indicator: true
        sliding-window-size: 10
        minimum-number-of-calls: 5
        permitted-number-of-calls-in-half-open-state: 3
        wait-duration-in-open-state: 30s
        failure-rate-threshold: 50
        record-exceptions:
          - java.lang.Exception
  ratelimiter:
    instances:
      user-service:
        limit-for-period: 100
        limit-refresh-period: 1s
        timeout-duration: 3s
  retry:
    instances:
      user-service:
        max-attempts: 3
        wait-duration: 1s
        exponential-backoff-multiplier: 2

# OpenAPI Documentation
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
    tagsSorter: alpha
  show-actuator: true

# Application Specific Configuration
frankenstein:
  user-service:
    default-user-role: USER
    password-strength:
      min-length: 8
      require-uppercase: true
      require-lowercase: true
      require-digits: true
      require-special-chars: true
    jwt:
      expiration: 86400  # 24 hours in seconds
    oauth:
      success-url: http://localhost:3000/dashboard
      failure-url: http://localhost:3000/login?error=true
